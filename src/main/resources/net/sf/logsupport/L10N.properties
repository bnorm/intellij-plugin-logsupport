#
# Copyright 2010, Juergen Kellerer and other contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# General
name=Log Support

# Intentions
Intentions.AbstractLogIdIntention.familyName=Modify Log-IDs
Intentions.AddLogIdIntention.name=Add Log-ID
Intentions.RemoveLogIdIntention.name=Remove Log-ID
Intentions.ReplaceLogIdIntention.name=Replace Log-ID
Intentions.AddLogIfConditionIntention.name=Wrap inside log level aware 'if' statement
Intentions.RemoveLogIfConditionIntention.name=Remove 'if' statement from log call.

# Inspections
Inspections.ShouldBeWrappedInCondition.name=Log calls should be conditional.
Inspections.ShouldBeWrappedInCondition.problemMessage=The log method call should be wrapped inside an 'if' statement.
Inspections.ThrowableInFormattedMessage.name=Verify throwable in formatted message
Inspections.ThrowableInFormattedMessage.problemMessage=Throwables cannot be used in combination with formatted log messages.
Inspections.VerifyFormattedMessage.name=Verify formatted message
Inspections.VerifyFormattedMessage.invalidArgumentType=The argument passed at index {0} is of an invalid type.  
Inspections.VerifyFormattedMessage.invalidFormat=The formatting fails with: {0}  
Inspections.VerifyFormattedMessage.invalidArgumentCount=The formatted log message expects {0} arguments, passed {1}.

# Live templates
LoggerFactoryProcessor.optionName=Post-process log template.

# UI
Dialogs.confirmDelete.confirmationTemplate.unnamed=Do you really want to delete {0}?
Dialogs.confirmDelete.titleTemplate.unnamed=Delete {0}?
Dialogs.confirmDelete.confirmationTemplate=Do you really want to delete {0} "{1}"?
Dialogs.confirmDelete.titleTemplate=Delete {0} "{1}"?
Dialogs.confirmOverwrite.confirmationTemplate=Do you really want to overwrite {0}?
Dialogs.confirmOverwrite.titleTemplate=Overwrite {0}?

AbstractMasterDetailsPanel.askFroNewNameTemplate=New {0} name:
AbstractMasterDetailsPanel.emptySelectionMessageTemplate=Select an {0} to view or edit its properties here.
AbstractMasterDetailsPanel.AddAction.name=Add
AbstractMasterDetailsPanel.AddAction.descriptionTemplate=Adds a new {0}
AbstractMasterDetailsPanel.CopyAction.name=Copy
AbstractMasterDetailsPanel.CopyAction.descriptionTemplate=Copies the selected {0} and adds it under a new name

LogFrameworkEditor.MessageFormatType.none=
LogFrameworkEditor.MessageFormatType.printf=printf-style
LogFrameworkEditor.MessageFormatType.messageformat=MessageFormat-style
LogFrameworkEditor.MessageFormatType.custom=Custom

ProjectConfigurationEditor.projectDefaults=Project Defaults
ProjectConfigurationEditor.defaultFramework=Framework
ProjectConfigurationEditor.defaultFramework.forceUsingDefault=Do not use configured instances of other supported frameworks
ProjectConfigurationEditor.logIDCreation=Log ID creation
ProjectConfigurationEditor.logIDCreation.customizeSequence=customize sequence
ProjectConfigurationEditor.logIDCreation.sequenceFrom=From
ProjectConfigurationEditor.logIDCreation.sequenceTo=To
ProjectConfigurationEditor.logIDCreation.sequenceIncrement=Increment
ProjectConfigurationEditor.surroundWithCondition=Surround with if() statement
ProjectConfigurationEditor.scopedOverrides=Scoped Overrides
ProjectConfigurationEditor.disabled=Disabled
ProjectConfigurationEditor.ConditionFormat.noLineBreak=Single line "if" statement
ProjectConfigurationEditor.ConditionFormat.lineBreak="if" statement
ProjectConfigurationEditor.ConditionFormat.lineBreakAndBraces="if" statement with {}


TargetedLogConfigurationPanel.scope=Scope
TargetedLogConfigurationPanel.logFramework=Log Framework
TargetedLogConfigurationPanel.logId=Log Id
TargetedLogConfigurationPanel.customize=customize
TargetedLogConfigurationPanel.from=From
TargetedLogConfigurationPanel.to=To
TargetedLogConfigurationPanel.increment=Increment
TargetedLogConfigurationPanel.noChange=No change
TargetedLogConfigurationPanel.scopesLink=Select "Scopes" to add new scopes or modify existing ones.

LogIdEditor.formatSettings=Format Settings
LogIdEditor.idPrefix=Prefix
LogIdEditor.idTrailer=Trailer
LogIdEditor.invalidPrefixOrTrailer=The specified prefix or trailer isn't matched by \
  the regular expression pattern (see Matcher pattern).
LogIdEditor.idFormat=Format
LogIdEditor.idFormatPattern=Format pattern
LogIdEditor.idMatcherPattern=Matcher pattern
LogIdEditor.invalidMatcherPattern=The formatting pattern is invalid, it does not match the ID.
LogIdEditor.sequenceSettings=Sequence Settings
LogIdEditor.sequenceMinValue=M&in value
LogIdEditor.sequenceMaxValue=M&ax value
LogIdEditor.example=Example

IntegrateLogReview.title=Integrate Log Review
IntegrateLogReview.selectTitle=Select review to integrate:
IntegrateLogReview.command=Integrate
IntegrateLogReview.invalidReview=<html>Cannot read the contents of the given review file. \
  It doesn't seem to be a valid XHTML log review.</html>
IntegrateLogReview.contentInfo=<html>Found {0,number} entries inside the this log review.<br/>\
  <b>Note:</b> The amount of actual changes may differ. Click "Integrate" to learn more.</html>
IntegrateLogReview.integrateConfirmation={0,number} log messages in {1,number} files
IntegrateLogReview.integrateApplyJobTitle=Integrating {0,number} reviewed log messages.
